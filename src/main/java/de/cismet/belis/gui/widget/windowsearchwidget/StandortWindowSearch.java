/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package de.cismet.belis.gui.widget.windowsearchwidget;

import com.vividsolutions.jts.geom.Geometry;

import de.cismet.belis.server.search.BelisSearchStatement;
import de.cismet.belis.server.search.StandortSearchStatement;

import de.cismet.cids.tools.search.clientstuff.CidsWindowSearch;

/**
 * DOCUMENT ME!
 *
 * @author   mroncoroni
 * @version  $Revision$, $Date$
 */
@org.openide.util.lookup.ServiceProvider(service = CidsWindowSearch.class)
public class StandortWindowSearch extends BelisWindowSearch {

    //~ Static fields/initializers ---------------------------------------------

    private static final org.apache.log4j.Logger LOG = org.apache.log4j.Logger.getLogger(StandortWindowSearch.class);

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private de.cismet.cids.editors.DefaultBindableDateChooser dcFrom;
    private de.cismet.cids.editors.DefaultBindableDateChooser dcFrom1;
    private de.cismet.cids.editors.DefaultBindableDateChooser dcTo;
    private de.cismet.cids.editors.DefaultBindableDateChooser dcTo1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JPanel panLfdNummer;
    private javax.swing.JPanel panMain;
    private javax.swing.JPanel panMastanstrich;
    private javax.swing.JPanel panMastschutz;
    private javax.swing.JPanel panMontageFirma;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form LandParcelWindowSearch.
     */
    public StandortWindowSearch() {
        super(Mode.STANDORT, "Masten (Leuchten)");
        initComponents();
        initWithThisSpecificPanel(panMain);
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        panMain = new javax.swing.JPanel();
        panMastschutz = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        dcFrom = new de.cismet.cids.editors.DefaultBindableDateChooser();
        dcTo = new de.cismet.cids.editors.DefaultBindableDateChooser();
        jCheckBox4 = new javax.swing.JCheckBox();
        panMastanstrich = new javax.swing.JPanel();
        jCheckBox2 = new javax.swing.JCheckBox();
        dcFrom1 = new de.cismet.cids.editors.DefaultBindableDateChooser();
        dcTo1 = new de.cismet.cids.editors.DefaultBindableDateChooser();
        jCheckBox3 = new javax.swing.JCheckBox();
        panLfdNummer = new javax.swing.JPanel();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jSpinner1 = new javax.swing.JSpinner();
        jSpinner2 = new javax.swing.JSpinner();
        panMontageFirma = new javax.swing.JPanel();
        jCheckBox7 = new javax.swing.JCheckBox();
        jTextField1 = new javax.swing.JTextField();

        panMain.setLayout(new java.awt.GridBagLayout());

        panMastschutz.setBorder(javax.swing.BorderFactory.createTitledBorder(
                org.openide.util.NbBundle.getMessage(
                    StandortWindowSearch.class,
                    "StandortWindowSearch.panMastschutz.border.title"))); // NOI18N
        panMastschutz.setLayout(new java.awt.GridBagLayout());

        org.openide.awt.Mnemonics.setLocalizedText(
            jCheckBox1,
            org.openide.util.NbBundle.getMessage(StandortWindowSearch.class, "StandortWindowSearch.jCheckBox1.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panMastschutz.add(jCheckBox1, gridBagConstraints);

        dcFrom.setMaximumSize(new java.awt.Dimension(132, 25));
        dcFrom.setMinimumSize(new java.awt.Dimension(132, 25));
        dcFrom.setPreferredSize(new java.awt.Dimension(132, 25));

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                jCheckBox1,
                org.jdesktop.beansbinding.ELProperty.create("${selected}"),
                dcFrom,
                org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panMastschutz.add(dcFrom, gridBagConstraints);

        dcTo.setMaximumSize(new java.awt.Dimension(132, 25));
        dcTo.setMinimumSize(new java.awt.Dimension(132, 25));
        dcTo.setPreferredSize(new java.awt.Dimension(132, 25));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                jCheckBox4,
                org.jdesktop.beansbinding.ELProperty.create("${selected}"),
                dcTo,
                org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panMastschutz.add(dcTo, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(
            jCheckBox4,
            org.openide.util.NbBundle.getMessage(StandortWindowSearch.class, "StandortWindowSearch.jCheckBox4.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panMastschutz.add(jCheckBox4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panMain.add(panMastschutz, gridBagConstraints);

        panMastanstrich.setBorder(javax.swing.BorderFactory.createTitledBorder(
                org.openide.util.NbBundle.getMessage(
                    StandortWindowSearch.class,
                    "StandortWindowSearch.panMastanstrich.border.title"))); // NOI18N
        panMastanstrich.setLayout(new java.awt.GridBagLayout());

        org.openide.awt.Mnemonics.setLocalizedText(
            jCheckBox2,
            org.openide.util.NbBundle.getMessage(StandortWindowSearch.class, "StandortWindowSearch.jCheckBox2.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panMastanstrich.add(jCheckBox2, gridBagConstraints);

        dcFrom1.setMaximumSize(new java.awt.Dimension(132, 25));
        dcFrom1.setMinimumSize(new java.awt.Dimension(132, 25));
        dcFrom1.setPreferredSize(new java.awt.Dimension(132, 25));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                jCheckBox2,
                org.jdesktop.beansbinding.ELProperty.create("${selected}"),
                dcFrom1,
                org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panMastanstrich.add(dcFrom1, gridBagConstraints);

        dcTo1.setMaximumSize(new java.awt.Dimension(132, 25));
        dcTo1.setMinimumSize(new java.awt.Dimension(132, 25));
        dcTo1.setPreferredSize(new java.awt.Dimension(132, 25));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                jCheckBox3,
                org.jdesktop.beansbinding.ELProperty.create("${selected}"),
                dcTo1,
                org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panMastanstrich.add(dcTo1, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(
            jCheckBox3,
            org.openide.util.NbBundle.getMessage(StandortWindowSearch.class, "StandortWindowSearch.jCheckBox3.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panMastanstrich.add(jCheckBox3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panMain.add(panMastanstrich, gridBagConstraints);

        panLfdNummer.setBorder(javax.swing.BorderFactory.createTitledBorder(
                org.openide.util.NbBundle.getMessage(
                    StandortWindowSearch.class,
                    "StandortWindowSearch.panLfdNummer.border.title"))); // NOI18N
        panLfdNummer.setLayout(new java.awt.GridBagLayout());

        org.openide.awt.Mnemonics.setLocalizedText(
            jCheckBox5,
            org.openide.util.NbBundle.getMessage(StandortWindowSearch.class, "StandortWindowSearch.jCheckBox5.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panLfdNummer.add(jCheckBox5, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(
            jCheckBox6,
            org.openide.util.NbBundle.getMessage(StandortWindowSearch.class, "StandortWindowSearch.jCheckBox6.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panLfdNummer.add(jCheckBox6, gridBagConstraints);

        jSpinner1.setMaximumSize(new java.awt.Dimension(132, 25));
        jSpinner1.setMinimumSize(new java.awt.Dimension(132, 25));
        jSpinner1.setPreferredSize(new java.awt.Dimension(132, 25));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                jCheckBox5,
                org.jdesktop.beansbinding.ELProperty.create("${selected}"),
                jSpinner1,
                org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panLfdNummer.add(jSpinner1, gridBagConstraints);

        jSpinner2.setMaximumSize(new java.awt.Dimension(132, 25));
        jSpinner2.setMinimumSize(new java.awt.Dimension(132, 25));
        jSpinner2.setPreferredSize(new java.awt.Dimension(132, 25));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                jCheckBox6,
                org.jdesktop.beansbinding.ELProperty.create("${selected}"),
                jSpinner2,
                org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panLfdNummer.add(jSpinner2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panMain.add(panLfdNummer, gridBagConstraints);

        panMontageFirma.setBorder(javax.swing.BorderFactory.createTitledBorder(
                org.openide.util.NbBundle.getMessage(
                    StandortWindowSearch.class,
                    "StandortWindowSearch.panMontageFirma.border.title"))); // NOI18N
        panMontageFirma.setLayout(new java.awt.GridBagLayout());

        org.openide.awt.Mnemonics.setLocalizedText(
            jCheckBox7,
            org.openide.util.NbBundle.getMessage(StandortWindowSearch.class, "StandortWindowSearch.jCheckBox7.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panMontageFirma.add(jCheckBox7, gridBagConstraints);

        jTextField1.setText(org.openide.util.NbBundle.getMessage(
                StandortWindowSearch.class,
                "StandortWindowSearch.jTextField1.text")); // NOI18N
        jTextField1.setMaximumSize(new java.awt.Dimension(132, 25));
        jTextField1.setMinimumSize(new java.awt.Dimension(132, 25));
        jTextField1.setPreferredSize(new java.awt.Dimension(132, 25));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                jCheckBox7,
                org.jdesktop.beansbinding.ELProperty.create("${selected}"),
                jTextField1,
                org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panMontageFirma.add(jTextField1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panMain.add(panMontageFirma, gridBagConstraints);

        setLayout(null);

        bindingGroup.bind();
    } // </editor-fold>//GEN-END:initComponents

    @Override
    protected BelisSearchStatement createSearchStatement(final Geometry searchGeom) {
        final String mastschutz_von = (jCheckBox1.isSelected()) ? dcFrom.getDate().toString() : null;
        final String mastschutz_bis = (jCheckBox4.isSelected()) ? dcTo.getDate().toString() : null;
        final String mastanstrich_von = (jCheckBox2.isSelected()) ? dcFrom1.getDate().toString() : null;
        final String mastanstrich_bis = (jCheckBox3.isSelected()) ? dcTo1.getDate().toString() : null;
        final Integer laufendeNummer_von = (jCheckBox5.isSelected()) ? (Integer)jSpinner1.getValue() : null;
        final Integer laufendeNummer_bis = (jCheckBox6.isSelected()) ? (Integer)jSpinner2.getValue() : null;
        final String montagefirma = (jCheckBox7.isSelected()) ? jTextField1.getText() : null;
        return new StandortSearchStatement(
                mastschutz_von,
                mastschutz_bis,
                mastanstrich_von,
                mastanstrich_bis,
                laufendeNummer_von,
                laufendeNummer_bis,
                montagefirma,
                searchGeom);
    }
}
