/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package de.cismet.belis.arbeitsprotokollwizard;

import java.awt.event.ActionEvent;

import java.text.SimpleDateFormat;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;

import javax.swing.AbstractAction;
import javax.swing.Action;

import de.cismet.belis.broker.CidsBroker;

import de.cismet.cids.custom.beans.belis2.ArbeitsprotokollaktionCustomBean;
import de.cismet.cids.custom.beans.belis2.LeuchtmittelCustomBean;
import de.cismet.cids.custom.beans.belis2.TdtaLeuchtenCustomBean;
import de.cismet.cids.custom.beans.belis2.TdtaStandortMastCustomBean;

import de.cismet.cids.editors.DefaultBindableReferenceCombo;

/**
 * DOCUMENT ME!
 *
 * @author   jruiz
 * @version  $Revision$, $Date$
 */
@org.openide.util.lookup.ServiceProvider(service = AbstractArbeitsprotokollWizard.class)
public class LeuchteLeuchtmittelwechselWizard extends AbstractArbeitsprotokollWizard {

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cbxLeuchtmittel;
    private org.jdesktop.swingx.JXDatePicker dapLeuchteLeuchtmittelwechsel;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField txtLebensdauer;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form VorschaltgeraetwechselWizard.
     */
    public LeuchteLeuchtmittelwechselWizard() {
        initComponents();
        ((DefaultBindableReferenceCombo)cbxLeuchtmittel).setMetaClass(CidsBroker.getInstance().getBelisMetaClass(
                LeuchtmittelCustomBean.TABLE));
    }

    //~ Methods ----------------------------------------------------------------

    @Override
    public Class getEntityClass() {
        return TdtaLeuchtenCustomBean.class;
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel4 = new javax.swing.JLabel();
        dapLeuchteLeuchtmittelwechsel = new org.jdesktop.swingx.JXDatePicker();
        jLabel2 = new javax.swing.JLabel();
        cbxLeuchtmittel = new DefaultBindableReferenceCombo();
        jLabel3 = new javax.swing.JLabel();
        txtLebensdauer = new javax.swing.JTextField();

        setLayout(new java.awt.GridBagLayout());

        org.openide.awt.Mnemonics.setLocalizedText(
            jLabel4,
            org.openide.util.NbBundle.getMessage(
                LeuchteLeuchtmittelwechselWizard.class,
                "LeuchteLeuchtmittelwechselWizard.jLabel4.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jLabel4, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(dapLeuchteLeuchtmittelwechsel, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(
            jLabel2,
            org.openide.util.NbBundle.getMessage(
                LeuchteLeuchtmittelwechselWizard.class,
                "LeuchteLeuchtmittelwechselWizard.jLabel2.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jLabel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(cbxLeuchtmittel, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(
            jLabel3,
            org.openide.util.NbBundle.getMessage(
                LeuchteLeuchtmittelwechselWizard.class,
                "LeuchteLeuchtmittelwechselWizard.jLabel3.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jLabel3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(txtLebensdauer, gridBagConstraints);
    }                                                              // </editor-fold>//GEN-END:initComponents

    @Override
    public String getTitle() {
        return "Leuchtmittelwechsel";
    }

    @Override
    public Action getAction() {
        return new AbstractAction(getTitle()) {

                @Override
                public void actionPerformed(final ActionEvent e) {
                    clear();
                    showDialog();
                }
            };
    }

    /**
     * DOCUMENT ME!
     */
    @Override
    protected void clear() {
        dapLeuchteLeuchtmittelwechsel.setDate(null);
        cbxLeuchtmittel.setSelectedItem(null);
        txtLebensdauer.setText(null);
    }

    @Override
    protected Collection<ArbeitsprotokollaktionCustomBean> executeAktionen() {
        final SimpleDateFormat dateFormat = new SimpleDateFormat("dd.MM.yyyy");

        final TdtaLeuchtenCustomBean leuchte = getProtokoll().getFk_leuchte();

        final Date altLeuchteWechseldatum = leuchte.getWechseldatum();
        final LeuchtmittelCustomBean altLeuchtmittel = leuchte.getLeuchtmittel();
        final Double altLebensdauer = leuchte.getLebensdauer();

        final Date neuLeuchteWechseldatum = dapLeuchteLeuchtmittelwechsel.getDate();
        final LeuchtmittelCustomBean neuLeuchtmittel = (LeuchtmittelCustomBean)cbxLeuchtmittel.getSelectedItem();
        Double neuLebensdauer = null;
        try {
            neuLebensdauer = Double.parseDouble(txtLebensdauer.getText());
        } catch (Exception e) {
            neuLebensdauer = null;
        }

        leuchte.setWechseldatum(neuLeuchteWechseldatum);
        leuchte.setLeuchtmittel(neuLeuchtmittel);
        leuchte.setLebensdauer(neuLebensdauer);

        final ArbeitsprotokollaktionCustomBean leuchtmittelAktion = ArbeitsprotokollaktionCustomBean.createNew();
        leuchtmittelAktion.setAenderung("Leuchtmittel");
        leuchtmittelAktion.setAlt((altLeuchtmittel != null) ? altLeuchtmittel.getKeyString() : null);
        leuchtmittelAktion.setNeu((neuLeuchtmittel != null) ? neuLeuchtmittel.getKeyString() : null);

        final ArbeitsprotokollaktionCustomBean lebensdauerAktion = ArbeitsprotokollaktionCustomBean.createNew();
        lebensdauerAktion.setAenderung("Lebensdauer");
        lebensdauerAktion.setAlt((altLebensdauer != null) ? Double.toString(altLebensdauer) : null);
        lebensdauerAktion.setNeu((neuLebensdauer != null) ? Double.toString(neuLebensdauer) : null);

        final ArbeitsprotokollaktionCustomBean wechseldatumAktion = ArbeitsprotokollaktionCustomBean.createNew();
        wechseldatumAktion.setAenderung("Wechseldatum");
        wechseldatumAktion.setAlt((altLeuchteWechseldatum != null) ? dateFormat.format(altLeuchteWechseldatum) : null);
        wechseldatumAktion.setNeu((neuLeuchteWechseldatum != null) ? dateFormat.format(neuLeuchteWechseldatum) : null);

        final Collection<ArbeitsprotokollaktionCustomBean> aktionen = new ArrayList<ArbeitsprotokollaktionCustomBean>();
        aktionen.add(wechseldatumAktion);
        aktionen.add(leuchtmittelAktion);
        aktionen.add(lebensdauerAktion);

        return aktionen;
    }
}
